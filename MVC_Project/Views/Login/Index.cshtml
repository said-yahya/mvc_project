@{
    ViewData["Title"] = "Login";
    Layout = "_LoginLayout";
}

<div class="d-flex align-items-center justify-content-center" style="min-height: 90vh; background-color: #f7f7f5;">
    <div class="card shadow-sm" style="max-width: 480px; width: 100%; border-radius: 12px;">
        <div class="card-body p-4 p-md-5">
            <div id="loginContainer">
                <h2 class="mb-2" style="font-weight: 700; font-size: 2rem;">Log in</h2>

                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger" role="alert">
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <div>@error.ErrorMessage</div>
                        }
                    </div>
                }

                <form id="loginFormElement" method="post" action="/Login/Login" novalidate>
                    <div class="mb-3">
                        <label for="loginEmail" class="form-label">Email</label>
                        <input type="text" class="form-control" id="loginEmail" name="Email" required value="@Model?.Email">
                    </div>
                    <div class="mb-3 position-relative">
                        <label for="loginPassword" class="form-label">Password</label>
                        <div class="input-group">
                            <input type="password" class="form-control" id="loginPassword" name="Password" required>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-teal w-100" style="background-color:#007c89; color:#fff; border-color:#007c89;">Log in</button>
                </form>
                <p class="text-center mt-3" style="font-size: .95rem;">
                    <a href="/Login/Signup" class="link-primary text-decoration-underline">Sign up</a>
                </p>
            </div